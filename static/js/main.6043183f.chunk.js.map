{"version":3,"sources":["components/Header/Header.module.css","assets/pngwing.com.png","components/MyIdeas/MyIdeas.module.css","components/CompletedChallenges/CompletedChallenges.module.css","components/Ideas/Ideas.module.css","components/Achievements/MyAchievements.jsx","components/CompletedChallenges/TableDatas.jsx","components/CompletedChallenges/CompletedChallenges.jsx","components/Header/Header.jsx","components/Ideas/newIdea.jsx","components/Ideas/Ideas.jsx","API/api.js","components/MyIdeas/AddNewIdea.jsx","components/MyIdeas/MyIdeas.jsx","App.js","index.js","components/Achievements/MyAchievements.module.css"],"names":["module","exports","header","logoImg","__webpack_require__","p","ideasBlock","navigateKeys","ideasBlockNavigate","caruselBlock","idea","triangleLeft","triangleRight","storageButtons","CompletedChallengesBlock","CompletedChallengesTable","table","tHead","tBody","titleTh","cardFooterr","MyAchievements","props","react_default","a","createElement","className","styles","achievementsBlock","achievementsElements","Object","entries","ideasCounter","map","_ref","_ref2","slicedToArray","key","value","achievementsElementsBody","sphere","charAt","toUpperCase","slice","TableData","achievments","el","index","scope","activity","type","moment","date","local","startOf","fromNow","CompletedChallenges","TableDatas","Header","alt","src","imgDone","NewIdea","_useState","useState","_useState2","error","setError","_useState3","_useState4","isLoaded","setIsLoaded","_useState5","_useState6","setIdea","loadingData","fetch","then","res","json","result","newMyIdea","length","forEach","element","alert","useEffect","message","onDoubleClick","getIdeas","Ideas","newIdea","dataApi","axios","method","url","data","concat","toConsumableArray","response","achivFilter","ideasFilter","AddNewIdea","ref","slideEl","onClick","setcurrentSlideIndex","doneMyIdea","currentSlideIndex","prevSlide","cardFooter","MyIdeas","useRef","stepSlide","current","offsetWidth","getData","asyncToGenerator","_regeneratorRuntime","mark","_callee","resIdeas","resAchivs","wrap","_context","prev","next","sent","setMyIdea","setAchievments","stop","apply","this","arguments","style","transform","MyIdeas_AddNewIdea","localStorage","clear","App","getItem","JSON","parse","setItem","stringify","components_Header_Header","components_Ideas_Ideas","components_MyIdeas_MyIdeas","myIdeaId","dateNow","format","selectedIdea","find","obj","objectSpread","status","filter","Achievements_MyAchievements","counts","components_CompletedChallenges_CompletedChallenges","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.6043183f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1sfse\",\"logoImg\":\"Header_logoImg__lbPLR\"};","module.exports = __webpack_public_path__ + \"static/media/pngwing.com.3990442b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ideasBlock\":\"MyIdeas_ideasBlock__1lYYM\",\"navigateKeys\":\"MyIdeas_navigateKeys__10xd6\",\"ideasBlockNavigate\":\"MyIdeas_ideasBlockNavigate__E6_O4\",\"caruselBlock\":\"MyIdeas_caruselBlock__plDwq\",\"idea\":\"MyIdeas_idea__33vCm\",\"triangleLeft\":\"MyIdeas_triangleLeft__3VizQ\",\"triangleRight\":\"MyIdeas_triangleRight__1xah1\",\"storageButtons\":\"MyIdeas_storageButtons__2EtFK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CompletedChallengesBlock\":\"CompletedChallenges_CompletedChallengesBlock__1224U\",\"CompletedChallengesTable\":\"CompletedChallenges_CompletedChallengesTable__wVfp_\",\"table\":\"CompletedChallenges_table__1C9NS\",\"tHead\":\"CompletedChallenges_tHead__1Cetp\",\"tBody\":\"CompletedChallenges_tBody__2TXaW\",\"titleTh\":\"CompletedChallenges_titleTh__2Lwq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ideasBlock\":\"Ideas_ideasBlock__2OMzu\",\"caruselBlock\":\"Ideas_caruselBlock__3F6aA\",\"idea\":\"Ideas_idea__JQdDo\",\"cardFooterr\":\"Ideas_cardFooterr__3CPd_\"};","import React from \"react\";\nimport styles from \"./MyAchievements.module.css\";\n\nconst MyAchievements = (props) => (\n  <div className={styles.achievementsBlock}>\n    <h2>Achievements:</h2>\n    <div className={styles.achievementsElements}>\n      {Object.entries(props.ideasCounter).map(([key, value]) => {\n        return (\n          <div key={key + 1} className={styles.achievementsElementsBody}>\n            <div className={styles.sphere}>{value}</div>\n            <p>{key.charAt(0).toUpperCase() + key.slice(1)}</p>\n          </div>\n        );\n      })}\n    </div>\n  </div>\n);\n\nexport default MyAchievements;\n","import React from \"react\";\nimport moment from \"moment-timezone\";\n\nconst TableData = (props) => {\n  return props.achievments.map((el, index) => (\n    <tr key={el.key + index}>\n      <th scope=\"row\"></th>\n      <td>{el.activity}</td>\n      <td>{el.type}</td>\n      <td>\n        {moment(el.date, [\"DD.MM.YYYY HH:mm\"])\n          .local()\n          .startOf(\"seconds\")\n          .fromNow()}\n      </td>\n    </tr>\n  ));\n};\n\nexport default TableData;\n","import React from \"react\";\nimport styles from \"./CompletedChallenges.module.css\";\nimport TableData from \"./TableDatas\";\n\nconst CompletedChallenges = (props) => \n    <div className={styles.CompletedChallengesBlock}>\n      <h2>Completed Challenges:</h2>\n      <div className={styles.CompletedChallengesTable}>\n        <table className={styles.table}>\n          <thead>\n            <tr className={styles.tHead}>\n              <td>&nbsp;</td>\n              <th className={styles.titleTh} scope=\"col\">\n                Title\n              </th>\n              <th scope=\"col\">Type</th>\n              <th scope=\"col\">When</th>\n            </tr>\n          </thead>\n          <tbody className={styles.tBody}>\n            <TableData achievments={props.achievments} />\n          </tbody>\n        </table>\n      </div>\n    </div>\n\nexport default CompletedChallenges;\n","import React from \"react\";\nimport styles from \"./Header.module.css\";\nimport imgDone from \"../../assets/pngwing.com.png\";\n\nconst Header = () => {\n  return (\n    <header className={styles.header}>\n      <img\n        alt=\"Lets Do IT!\"\n        src=\"https://img.icons8.com/dusk/344/kawaii-coffee.png\"\n      ></img>\n      <h1>\n        Let's do it!\n        <img className={styles.logoImg} src={imgDone} alt=\"Lets Do IT!\"></img>\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./Ideas.module.css\";\n\nlet NewIdea = (props) => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [idea, setIdea] = useState();\n  const loadingData = () => {\n    fetch(\"https://www.boredapi.com/api/activity\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (props.newMyIdea.length < 40) {\n            if (idea && idea.key === result.key) {\n              loadingData();\n            }\n\n            props.newMyIdea.forEach((element) => {\n              if (element.key === result.key) {\n                loadingData();\n              }\n            });\n\n            setIsLoaded(true);\n            setIdea(result);\n          } else {\n            alert(\"Ideas is over\");\n          }\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  };\n\n  useEffect(() => {\n    loadingData();\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div\n        className={styles.idea}\n        onDoubleClick={() => {\n          props.getIdeas(idea);\n          loadingData();\n        }}\n      >\n        <p key={idea.key}>{idea.activity}</p>\n        <div className={styles.cardFooterr}>\n          <hr />\n          <p>{idea.type.charAt(0).toUpperCase() + idea.type.slice(1)}</p>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default NewIdea;\n","import React from \"react\";\nimport styles from \"./Ideas.module.css\";\nimport NewIdea from \"./newIdea\";\n\nconst Ideas = (props) => {\n  return (\n    <div className={styles.ideasBlock}>\n      <h2>Choose fresh ideas to do:</h2>\n      <div className={styles.caruselBlock}>\n        <NewIdea getIdeas={props.getIdeas} newMyIdea={props.newMyIdea} />\n        <NewIdea getIdeas={props.getIdeas} newMyIdea={props.newMyIdea} />\n        <NewIdea getIdeas={props.getIdeas} newMyIdea={props.newMyIdea} />\n        <NewIdea getIdeas={props.getIdeas} newMyIdea={props.newMyIdea} />\n      </div>\n    </div>\n  );\n};\n\nexport default Ideas;\n","import * as axios from \"axios\";\n\nexport const dataApi = {\n  sendData(newMyIdea, achievments) {\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/postideas\",\n      data: [...newMyIdea, ...achievments],\n    });\n  },\n\n  getAchivsData() {\n    return axios({\n      method: \"get\",\n      url: \"http://localhost:5000/getideas\",\n    }).then(function(response) {\n      return response.data.achivFilter;\n    });\n  },\n  getIdeasData() {\n    return axios({\n      method: \"get\",\n      url: \"http://localhost:5000/getideas\",\n    }).then(function(response) {\n      return response.data.ideasFilter;\n    });\n  },\n};\n","import React from \"react\";\nimport styles from \"./MyIdeas.module.css\";\n\nconst AddNewIdea = (props) => {\n  return props.newMyIdea.map((element, index) => (\n    <div\n      key={element.key + index}\n      className={styles.idea}\n      ref={props.slideEl}\n      onClick={() => {\n        props.setcurrentSlideIndex(index);\n      }}\n      onDoubleClick={() => {\n        props.doneMyIdea(element.key);\n        if ((props.newMyIdea.length = props.currentSlideIndex + 1)) {\n          props.prevSlide();\n        }\n      }}\n    >\n      <p>{element.activity}</p>\n      {props.currentSlideIndex !== index || (\n        <div className={styles.cardFooter}>\n          <hr />\n          <p>{element.type.charAt(0).toUpperCase() + element.type.slice(1)}</p>\n        </div>\n      )}\n    </div>\n  ));\n};\nexport default AddNewIdea;\n","import React, { useRef, useState } from \"react\";\nimport styles from \"./MyIdeas.module.css\";\nimport { dataApi } from \"../../API/api.js\";\nimport AddNewIdea from \"./AddNewIdea\";\n\nconst MyIdeas = (props) => {\n  let [currentSlideIndex, setcurrentSlideIndex] = useState(0);\n  const slideEl = useRef(null);\n\n  const nextSlide = () => {\n    if (currentSlideIndex < props.newMyIdea.length - 1) {\n      setcurrentSlideIndex(currentSlideIndex + 1);\n    } else {\n      setcurrentSlideIndex(0);\n    }\n  };\n  const prevSlide = () => {\n    if (currentSlideIndex > 0) {\n      setcurrentSlideIndex(currentSlideIndex - 1);\n    } else {\n      setcurrentSlideIndex(props.newMyIdea.length - 1);\n    }\n  };\n\n  let stepSlide = 0;\n  if (slideEl && slideEl.current && slideEl.current.offsetWidth) {\n    stepSlide =\n      -slideEl.current.offsetWidth * currentSlideIndex - 60 * currentSlideIndex;\n  }\n\n  const sendData = () => {\n    dataApi.sendData(props.newMyIdea, props.achievments);\n    localStorage.clear();\n  };\n  const getData = async () => {\n    const resIdeas = await dataApi.getIdeasData();\n    props.setMyIdea(resIdeas);\n    const resAchivs = await dataApi.getAchivsData();\n    props.setAchievments(resAchivs);\n  };\n\n  return (\n    <div className={styles.ideasBlock}>\n      <h2>Choose fresh ideas to do:</h2>\n      <div className={styles.navigateKeys}>\n        {!!props.newMyIdea.length && (\n          <div\n            className={styles.triangleLeft}\n            onClick={() => {\n              prevSlide();\n            }}\n          ></div>\n        ) }\n\n        <div className={styles.ideasBlockNavigate}>\n          <div\n            className={styles.caruselBlock}\n            style={{ transform: `translateX(${stepSlide}px)` }}\n          >\n            <AddNewIdea\n              newMyIdea={props.newMyIdea}\n              slideEl={slideEl}\n              setcurrentSlideIndex={setcurrentSlideIndex}\n              currentSlideIndex={currentSlideIndex}\n              doneMyIdea={props.doneMyIdea}\n              prevSlide={prevSlide}\n            />\n          </div>\n        </div>\n        {!!props.newMyIdea.length && (\n          <div\n            className={styles.triangleRight}\n            onClick={nextSlide}\n          ></div>\n        )}\n      </div>\n      <p>\n        {props.newMyIdea.length ? currentSlideIndex + 1 : 0}/\n        {props.newMyIdea.length}\n      </p>\n      <div className={styles.storageButtons}>\n        <button onClick={sendData}>SendData</button>\n        <button onClick={getData}>GetData</button>\n      </div>\n    </div>\n  );\n};\n\nexport default MyIdeas;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport MyAchievements from \"./components/Achievements/MyAchievements\";\nimport CompletedChallenges from \"./components/CompletedChallenges/CompletedChallenges\";\nimport Header from \"./components/Header/Header\";\nimport Ideas from \"./components/Ideas/Ideas\";\nimport MyIdeas from \"./components/MyIdeas/MyIdeas\";\nimport moment from \"moment-timezone\";\n\nfunction App() {\n  const [newMyIdea, setMyIdea] = useState(\n    localStorage.getItem(\"newMyIdea\")\n      ? JSON.parse(localStorage.getItem(\"newMyIdea\"))\n      : []\n  );\n  const [achievments, setAchievments] = useState(\n    localStorage.getItem(\"achievments\")\n      ? JSON.parse(localStorage.getItem(\"achievments\"))\n      : []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"achievments\", JSON.stringify(achievments));\n    localStorage.setItem(\"newMyIdea\", JSON.stringify(newMyIdea));\n  }, [achievments, newMyIdea]);\n\n  const getIdeas = (value) => {\n    setMyIdea([...newMyIdea, value]);\n  };\n\n  const doneMyIdea = (myIdeaId) => {\n    const dateNow = moment().format(\"DD.MM.YYYY HH:mm\");\n    const selectedIdea = newMyIdea.find((obj) => obj.key === myIdeaId);\n    setAchievments([\n      ...achievments,\n      { ...selectedIdea, date: dateNow, status: 1 },\n    ]);\n    setMyIdea(newMyIdea.filter((obj) => obj.key !== myIdeaId));\n  };\n\n  const ideasCounter = () => {\n    let counts = {};\n    achievments.map((element) => {\n      if (counts[element.type]) {\n        counts[element.type] = counts[element.type] + 1;\n      } else {\n        counts[element.type] = 1;\n      }\n\n      return element;\n    });\n    return counts;\n  };\n\n  return (\n    <div className=\"app-wrapper\">\n      <Header />\n      <Ideas getIdeas={getIdeas} newMyIdea={newMyIdea} />\n      <MyIdeas\n        newMyIdea={newMyIdea}\n        doneMyIdea={doneMyIdea}\n        achievments={achievments}\n        setAchievments={setAchievments}\n        setMyIdea={setMyIdea}\n      />\n      <MyAchievements newMyIdea={newMyIdea} ideasCounter={ideasCounter()} />\n      <CompletedChallenges achievments={achievments} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"achievementsBlock\":\"MyAchievements_achievementsBlock__328jW\",\"achievementsElements\":\"MyAchievements_achievementsElements__2W12S\",\"achievementsElementsBody\":\"MyAchievements_achievementsElementsBody__3olNR\",\"sphere\":\"MyAchievements_sphere__2NQve\"};"],"sourceRoot":""}